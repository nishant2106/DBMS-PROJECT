{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nishant/TE_FIRSTSEM/SL-1/project/bloodbook/src/pages/RequestUser/RequestUser.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { FaPlus, FaTimes } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\nimport RequestUserList from './RequestUserList';\n\nclass RequestUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editCallBack = nid => {\n      if (this.state.isClicked) {\n        this.setState((prevState, props) => {\n          return {\n            screenId: 2,\n            nid: nid\n          };\n        });\n      }\n    };\n\n    this.closeCallBack = () => {\n      this.setState({\n        screenId: 0\n      });\n    };\n\n    this.state = {\n      screenId: 0,\n      nid: ''\n    };\n  }\n\n  getCurrentView() {\n    return /*#__PURE__*/_jsxDEV(RequestUserList, {\n      editCallBack: this.editCallBack,\n      closeCallBack: this.closeCallBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n  /* getButtonIcon(){\n       if(this.state.screenId === 1 || this.state.screenId === 2)\n                   return <FaTimes/>;\n       else return <FaPlus/>;\n   }\n    handleClick = () => {\n       let sid = this.state.screenId === 0 ? 1 : 0 ;\n       this.setState((prevState, props) => {\n         return { screenId: sid }     \n       });\n     }\n  */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: this.getCurrentView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RequestUser;","map":{"version":3,"sources":["/home/nishant/TE_FIRSTSEM/SL-1/project/bloodbook/src/pages/RequestUser/RequestUser.js"],"names":["React","Component","Button","FaPlus","FaTimes","IconContext","RequestUserList","RequestUser","constructor","props","editCallBack","nid","state","isClicked","setState","prevState","screenId","closeCallBack","getCurrentView","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,MAAT,EAAgBC,OAAhB,QAA+B,gBAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGA,MAAMC,WAAN,SAA0BN,SAA1B,CAAmC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA2BlBC,YA3BkB,GA2BFC,GAAD,IAAQ;AACnB,UAAG,KAAKC,KAAL,CAAWC,SAAd,EAAwB;AACpB,aAAKC,QAAL,CAAc,CAACC,SAAD,EAAYN,KAAZ,KAAsB;AAChC,iBAAO;AAAEO,YAAAA,QAAQ,EAAE,CAAZ;AAAeL,YAAAA,GAAG,EAAEA;AAApB,WAAP;AACH,SAFD;AAGH;AACJ,KAjCiB;;AAAA,SAmClBM,aAnCkB,GAmCF,MAAM;AAClB,WAAKH,QAAL,CAAc;AAAEE,QAAAA,QAAQ,EAAG;AAAb,OAAd;AACH,KArCiB;;AAEd,SAAKJ,KAAL,GAAa;AACTI,MAAAA,QAAQ,EAAG,CADF;AAETL,MAAAA,GAAG,EAAG;AAFG,KAAb;AAIH;;AAGFO,EAAAA,cAAc,GAAE;AAGX,wBAAO,QAAC,eAAD;AAAiB,MAAA,YAAY,EAAG,KAAKR,YAArC;AAAoD,MAAA,aAAa,EAAG,KAAKO;AAAzE;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACF;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAcIE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACM,KAAKD,cAAL;AADN;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AArD8B;;AAuDnC,eAAeX,WAAf","sourcesContent":["import React,{Component} from 'react'\nimport { Button } from 'reactstrap';\nimport { FaPlus,FaTimes } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\nimport RequestUserList from './RequestUserList';\n\n\nclass RequestUser extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            screenId : 0,\n            nid : ''\n        }\n    }\n\n\n   getCurrentView(){\n       \n\n        return <RequestUserList editCallBack={ this.editCallBack } closeCallBack={ this.closeCallBack } />;\n    }\n   /* getButtonIcon(){\n        if(this.state.screenId === 1 || this.state.screenId === 2)\n                    return <FaTimes/>;\n        else return <FaPlus/>;\n    }\n\n    handleClick = () => {\n        let sid = this.state.screenId === 0 ? 1 : 0 ;\n        this.setState((prevState, props) => {\n          return { screenId: sid }     \n        });\n      }\n*/\n    editCallBack = (nid) =>{\n        if(this.state.isClicked){\n            this.setState((prevState, props) => {\n                return { screenId: 2, nid: nid}\n            });\n        }\n    }\n\n    closeCallBack = () => {\n        this.setState({ screenId : 0 });\n    }\n\n    render(){\n        return(\n            <div className=\"col-12\">\n                { this.getCurrentView() }\n                {/* <Button className=\"btn btn-lg btn-danger\"  */}\n                {/* style={{bottom: '45px', right: '24px', borderRadius:'50%',padding:'1%', position: 'fixed'}} */}\n                {/* onClick={ this.handleClick }> */}\n                    {/* <IconContext.Provider value={{ className: 'react-floating-button' }}> */}\n                        {/* {this.getButtonIcon()} */}\n                    {/* </IconContext.Provider> */}\n                {/* </Button> */}\n            </div>\n        )\n    }\n}\nexport default RequestUser;"]},"metadata":{},"sourceType":"module"}