{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nishant/TE_FIRSTSEM/SL-1/project/bloodbook/src/pages/Nurse/NurseEdit.js\";\nimport React, { Component } from \"react\";\nimport { Button, Col, Form, Input, Label, Row } from \"reactstrap\";\nimport http from '../../shared/common';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass NurseEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      nurse: {},\n      nid: this.props.nid,\n      name: '',\n      email: '',\n      phone: '',\n      location: ''\n    };\n  }\n\n  loadData() {\n    if (!this.isLoaded) {\n      http.get('Nurse/' + this.state.nid, {}).then(response => {\n        let nurse = response.data;\n        this.setState({\n          isLoaded: true,\n          nurse: nurse[0],\n          name: nurse[0].name,\n          email: nurse[0].email,\n          phone: nurse[0].mob_no,\n          location: nurse[0].city\n        });\n        console.log(response.data);\n      }).catch(error => {\n        if (error) toast.error('aint got any');\n      });\n    }\n  }\n\n  handleDelete() {\n    if (this.props.nid) {\n      http.delete('nurse/' + this.state.nid, {}).then(response => {\n        if (response.status === 200) {\n          toast.info('removed from register');\n          this.props.closeCallBack();\n        } else {\n          toast.error('unable to delete record');\n          this.props.closeCallBack();\n        }\n      }).catch(error => {\n        console.log('error');\n      });\n    }\n  }\n\n  handleUpdate() {\n    if (this.props.nid) {\n      http.post('nurse/' + this.state.nid, {\n        'name': this.state.name,\n        'email': this.state.email,\n        'address': this.state.location,\n        'mob': this.state.phone\n      }).then(response => {\n        if (response.status === 200) {\n          toast.info('Updated register');\n          this.props.closeCallBack();\n        } else {\n          toast.error('unable to Update record');\n          this.props.closeCallBack();\n        }\n      }).catch(error => {\n        console.log('error');\n      });\n    }\n  }\n\n  getForm() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"email\",\n            md: 2,\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              label: \"Email Address\",\n              placeholder: \"Email\",\n              className: \"form-control\",\n              defaultValue: this.state.nurse.email,\n              onChange: e => {\n                this.setState({\n                  email: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"fullname\",\n            md: 2,\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"fullname\",\n              name: \"fullname\",\n              placeholder: \"Full Name\",\n              defaultValue: this.state.nurse.name,\n              className: \"form-control\",\n              onChange: e => {\n                this.setState({\n                  name: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"mobnum\",\n            md: 2,\n            children: \"Mobile No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              id: \"mobnum\",\n              name: \"mobnum\",\n              placeholder: \"Mob. Number\",\n              className: \"form-control\",\n              defaultValue: this.state.nurse.mob_no,\n              onChange: e => {\n                this.setState({\n                  phone: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"location\",\n            md: 2,\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              id: \"location\",\n              name: \"location\",\n              placeholder: \"Enter City\",\n              className: \"form-control\",\n              defaultValue: this.state.nurse.city,\n              onChange: e => {\n                this.setState({\n                  location: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              size: 3,\n              offset: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-lg\",\n              color: \"danger\",\n              onClick: () => this.handleDelete(),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              size: 5,\n              offset: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-lg\",\n              color: \"info\",\n              onClick: () => this.handleUpdate(),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-content\",\n        children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          newestOnTop: false,\n          closeOnClick: true,\n          rtl: false,\n          pauseOnFocusLoss: true,\n          draggable: true,\n          pauseOnHover: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10 offset-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nurse Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this), this.state.isLoaded ? this.getForm() : this.loadData()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NurseEdit;","map":{"version":3,"sources":["/home/nishant/TE_FIRSTSEM/SL-1/project/bloodbook/src/pages/Nurse/NurseEdit.js"],"names":["React","Component","Button","Col","Form","Input","Label","Row","http","ToastContainer","toast","NurseEdit","constructor","props","state","isLoaded","nurse","nid","name","email","phone","location","loadData","get","then","response","data","setState","mob_no","city","console","log","catch","error","handleDelete","delete","status","info","closeCallBack","handleUpdate","post","getForm","e","target","value","size","offset","render"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\";\nimport { Button, Col, Form,Input, Label, Row } from \"reactstrap\";\nimport http from '../../shared/common'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nclass NurseEdit extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoaded    : false,\n            nurse       : {},\n            nid         : this.props.nid,\n            name       : '',\n            email       : '',\n            phone       : '',\n            location    : ''\n        }\n    }\n    loadData(){\n        if(!this.isLoaded){\n            http.get('Nurse/'+this.state.nid, {}).then((response) =>{\n                let nurse = response.data;\n                this.setState({ isLoaded : true, \n                    nurse : nurse[0],\n                    name   : nurse[0].name,\n                    email   : nurse[0].email,\n                    phone   : nurse[0].mob_no,\n                    location: nurse[0].city\n                });\n                console.log(response.data);\n               \n            }).catch((error)=>{\n                if(error)\n                    toast.error('aint got any');\n            });\n        }\n    }\n    handleDelete(){\n        if(this.props.nid){\n            http.delete('nurse/'+this.state.nid, {}).then((response) => {\n                if(response.status === 200){\n                    toast.info('removed from register');\n                    this.props.closeCallBack();\n                }else{\n                    toast.error('unable to delete record');\n                    this.props.closeCallBack();\n                }\n                \n            }).catch((error) => {\n                console.log('error');\n            });\n        }\n    }\n    handleUpdate(){\n        if(this.props.nid){\n            http.post('nurse/'+this.state.nid, {\n                'name':this.state.name,\n                'email':this.state.email,\n                'address':this.state.location,\n                'mob':this.state.phone\n            }).then((response) => {\n                if(response.status === 200){\n                    toast.info('Updated register');\n                    this.props.closeCallBack();\n                }else{\n                    toast.error('unable to Update record');\n                    this.props.closeCallBack();\n                }\n                \n            }).catch((error) => {\n                console.log('error');\n            });\n        }\n    }\n    getForm(){\n        return(\n            <div className=\"col-md-6\">\n                <hr/>\n                <Form>\n                <Row className=\"form-group\">\n                        <Label htmlFor=\"email\" md={2}>Email</Label>\n                        <Col md={10}>\n                            <Input type=\"email\"  id=\"email\" name=\"email\"\n                                label=\"Email Address\"\n                                placeholder=\"Email\"\n                                className=\"form-control\"\n                                defaultValue={ this.state.nurse.email }\n                                onChange={\n                                    (e) => {\n                                        this.setState({email:e.target.value});\n                                    }\n                                }\n                            />\n                        </Col>\n                    </Row>\n                    {/* <div style={this.getStyles()}> */}\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"fullname\" md={2}>Full Name</Label>\n                            <Col md={10}>\n                                <Input type=\"text\" id=\"fullname\" name=\"fullname\"\n                                    placeholder=\"Full Name\"\n                                    defaultValue={ this.state.nurse.name }\n                                    className=\"form-control\"\n                                    onChange={\n                                        (e) => {\n                                            this.setState({ name : e.target.value })\n                                        }\n                                    }\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"mobnum\" md={2}>Mobile No.</Label>\n                            <Col md={10}>\n                                <Input type=\"number\" id=\"mobnum\" name=\"mobnum\"\n                                    placeholder=\"Mob. Number\"\n                                    className=\"form-control\"\n                                    defaultValue={ this.state.nurse.mob_no }\n                                    onChange={\n                                        (e) => {\n                                            this.setState({ phone : e.target.value })\n                                        }\n                                    }\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"location\" md={2}>City</Label>\n                            <Col md={10}>\n                                <Input  id=\"location\" name=\"location\"\n                                    placeholder=\"Enter City\"\n                                    className=\"form-control\"\n                                    defaultValue={ this.state.nurse.city }\n                                    onChange={\n                                        (e) => {\n                                            this.setState({ location : e.target.value })\n                                        }\n                                    }\n                                />\n                            </Col>\n                        </Row>\n                    {/* </div> */}\n                    <hr/>\n                    <Row className=\"form-group\">\n                        <Col md={{ size: 3, offset: 2 }}>\n                            <Button className=\"btn btn-lg\" color=\"danger\" onClick={()=>this.handleDelete()}>\n                                Delete\n                            </Button>\n                        </Col>\n                        <Col md={{ size: 5, offset: 0 }}>\n                            <Button className=\"btn btn-lg\" color=\"info\" onClick={()=>this.handleUpdate()}>\n                                Update\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        )\n    }\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                <ToastContainer position=\"top-right\"\n                    autoClose={2000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover/>\n                    <div className=\"col-10 offset-2\">\n                    <h3>Nurse Edit</h3>\n                    \n                    { this.state.isLoaded ? this.getForm() : this.loadData() }\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NurseEdit;"]},"metadata":{},"sourceType":"module"}