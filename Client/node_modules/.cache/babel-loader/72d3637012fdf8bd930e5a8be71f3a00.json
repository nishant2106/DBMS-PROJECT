{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nishant/TE_FIRSTSEM/SL-1/project/bloodbook/src/pages/Hospital/HospitalEdit.js\";\nimport React, { Component } from \"react\";\nimport { Button, Col, Form, Input, Label, Row } from \"reactstrap\";\nimport http from '../../shared/common';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass HospitalEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      hospital: {},\n      h_id: this.props.h_id,\n      name: '',\n      mob_no: '',\n      address: '',\n      district: '',\n      city: '',\n      picode: ''\n    };\n  }\n\n  loadData() {\n    if (!this.isLoaded) {\n      http.get('Hospital/' + this.state.h_id, {}).then(response => {\n        let hospital = response.data;\n        this.setState({\n          isLoaded: true,\n          hospital: hospital[0],\n          name: hospital[0].name,\n          mob_no: hospital[0].mob_no,\n          address: hospital[0].address,\n          district: hospital[0].district,\n          pincode: hospital[0].pincode,\n          city: hospital[0].city\n        });\n        console.log(response.data);\n      }).catch(error => {\n        if (error) toast.error('aint got any');\n      });\n    }\n  }\n\n  handleDelete() {\n    if (this.props.nid) {\n      http.delete('hospital/' + this.state.h_id, {}).then(response => {\n        if (response.status === 200) {\n          toast.info('removed from register');\n          this.props.closeCallBack();\n        } else {\n          toast.error('unable to delete record');\n          this.props.closeCallBack();\n        }\n      }).catch(error => {\n        console.log('error');\n      });\n    }\n  }\n\n  handleUpdate() {\n    console.log('kdn');\n\n    if (this.props.nid) {\n      http.post('hospital/' + this.state.h_id, {\n        'name': this.state.name,\n        'mob_no': this.state.mob_no,\n        'address': this.state.address,\n        'district': this.state.district,\n        'pincode': this.state.pincode\n      }).then(response => {\n        if (response.status === 200) {\n          toast.info('Updated register');\n          this.props.closeCallBack();\n        } else {\n          toast.error('unable to Update record');\n          this.props.closeCallBack();\n        }\n      }).catch(error => {\n        console.log('error');\n      });\n    }\n  }\n\n  getForm() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"name\",\n            md: 2,\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              id: \"name\",\n              name: \"name\",\n              label: \"name\",\n              placeholder: \"name\",\n              className: \"form-control\",\n              defaultValue: this.state.hospital.name,\n              onChange: e => {\n                this.setState({\n                  name: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"address\",\n            md: 2,\n            children: \"District\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"address\",\n              id: \"address\",\n              name: \"address\",\n              placeholder: \"city\",\n              defaultValue: this.state.hospital.district,\n              className: \"form-control\",\n              onChange: e => {\n                this.setState({\n                  address: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"mobnum\",\n            md: 2,\n            children: \"Mobile No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              id: \"mobnum\",\n              name: \"mobnum\",\n              placeholder: \"Mob. Number\",\n              className: \"form-control\",\n              defaultValue: this.state.hospital.mob_no,\n              onChange: e => {\n                this.setState({\n                  mob_no: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"location\",\n            md: 2,\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              id: \"location\",\n              name: \"location\",\n              placeholder: \"Enter district\",\n              className: \"form-control\",\n              defaultValue: this.state.hospital.district,\n              onChange: e => {\n                this.setState({\n                  district: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"pincode\",\n            md: 2,\n            children: \"Pincode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              id: \"Pincode\",\n              name: \"pincode\",\n              placeholder: \"Enter district\",\n              className: \"form-control\",\n              defaultValue: this.state.hospital.pincode,\n              onChange: e => {\n                this.setState({\n                  pincode: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              size: 3,\n              offset: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-lg\",\n              color: \"danger\",\n              onClick: () => this.handleDelete(),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              size: 5,\n              offset: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-lg\",\n              color: \"info\",\n              onClick: () => this.handleUpdate(),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-content\",\n        children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          newestOnTop: false,\n          closeOnClick: true,\n          rtl: false,\n          pauseOnFocusLoss: true,\n          draggable: true,\n          pauseOnHover: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10 offset-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"hospital Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this), this.state.isLoaded ? this.getForm() : this.loadData()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HospitalEdit;","map":{"version":3,"sources":["/home/nishant/TE_FIRSTSEM/SL-1/project/bloodbook/src/pages/Hospital/HospitalEdit.js"],"names":["React","Component","Button","Col","Form","Input","Label","Row","http","ToastContainer","toast","HospitalEdit","constructor","props","state","isLoaded","hospital","h_id","name","mob_no","address","district","city","picode","loadData","get","then","response","data","setState","pincode","console","log","catch","error","handleDelete","nid","delete","status","info","closeCallBack","handleUpdate","post","getForm","e","target","value","size","offset","render"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\";\nimport { Button, Col, Form,Input, Label, Row } from \"reactstrap\";\nimport http from '../../shared/common'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nclass HospitalEdit extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoaded    : false,\n            hospital       : {},\n            h_id         : this.props.h_id,\n            name       : '',\n            mob_no      : '',\n            address    : '',\n            district    :  '',\n            city: '',\n            picode      :  ''\n        }\n    }\n    loadData(){\n        if(!this.isLoaded){\n            http.get('Hospital/'+this.state.h_id, {}).then((response) =>{\n                let hospital = response.data;\n                this.setState({ isLoaded : true, \n                    hospital : hospital[0],\n                    name   : hospital[0].name,\n                    mob_no   : hospital[0].mob_no,\n                    address   : hospital[0].address,\n                    district: hospital[0].district,\n                    pincode : hospital[0].pincode,\n                    city:hospital[0].city\n                });\n                console.log(response.data);\n               \n            }).catch((error)=>{\n                if(error)\n                    toast.error('aint got any');\n            });\n        }\n    }\n    handleDelete(){\n        if(this.props.nid){\n            http.delete('hospital/'+this.state.h_id, {}).then((response) => {\n                if(response.status === 200){\n                    toast.info('removed from register');\n                    this.props.closeCallBack();\n                }else{\n                    toast.error('unable to delete record');\n                    this.props.closeCallBack();\n                }\n                \n            }).catch((error) => {\n                console.log('error');\n            });\n        }\n    }\n    handleUpdate(){\n        console.log('kdn')\n        if(this.props.nid){\n            http.post('hospital/'+this.state.h_id, {\n                'name':this.state.name,\n                'mob_no':this.state.mob_no,\n                'address':this.state.address,\n                'district':this.state.district,\n                'pincode' :this.state.pincode\n            }).then((response) => {\n                if(response.status === 200){\n                    toast.info('Updated register');\n                    this.props.closeCallBack();\n                }else{\n                    toast.error('unable to Update record');\n                    this.props.closeCallBack();\n                }\n                \n            }).catch((error) => {\n                console.log('error');\n            });\n        }\n    }\n    getForm(){\n        return(\n            <div className=\"col-md-6\">\n                <hr/>\n                <Form>\n                <Row className=\"form-group\">\n                        <Label htmlFor=\"name\" md={2}>Name</Label>\n                        <Col md={10}>\n                            <Input type=\"name\"  id=\"name\" name=\"name\"\n                                label=\"name\"\n                                placeholder=\"name\"\n                                className=\"form-control\"\n                                defaultValue={ this.state.hospital.name }\n                                onChange={\n                                    (e) => {\n                                        this.setState({name:e.target.value});\n                                    }\n                                }\n                            />\n                        </Col>\n                    </Row>\n                    {/* <div style={this.getStyles()}> */}\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"address\" md={2}>District</Label>\n                            <Col md={10}>\n                                <Input type=\"address\" id=\"address\" name=\"address\"\n                                    placeholder=\"city\"\n                                    defaultValue={ this.state.hospital.district }\n                                    className=\"form-control\"\n                                    onChange={\n                                        (e) => {\n                                            this.setState({ address : e.target.value })\n                                        }\n                                    }\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"mobnum\" md={2}>Mobile No.</Label>\n                            <Col md={10}>\n                                <Input type=\"number\" id=\"mobnum\" name=\"mobnum\"\n                                    placeholder=\"Mob. Number\"\n                                    className=\"form-control\"\n                                    defaultValue={ this.state.hospital.mob_no }\n                                    onChange={\n                                        (e) => {\n                                            this.setState({ mob_no : e.target.value })\n                                        }\n                                    }\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"location\" md={2}>City</Label>\n                            <Col md={10}>\n                                <Input  id=\"location\" name=\"location\"\n                                    placeholder=\"Enter district\"\n                                    className=\"form-control\"\n                                    defaultValue={ this.state.hospital.district }\n                                    onChange={\n                                        (e) => {\n                                            this.setState({ district : e.target.value })\n                                        }\n                                    }\n                                />\n                            </Col>\n                        </Row>\n\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"pincode\" md={2}>Pincode</Label>\n                            <Col md={10}>\n                                <Input  id=\"Pincode\" name=\"pincode\"\n                                    placeholder=\"Enter district\"\n                                    className=\"form-control\"\n                                    defaultValue={ this.state.hospital.pincode }\n                                    onChange={\n                                        (e) => {\n                                            this.setState({ pincode : e.target.value })\n                                        }\n                                    }\n                                />\n                            </Col>\n                        </Row>\n                    {/* </div> */}\n                    <hr/>\n                    <Row className=\"form-group\">\n                        <Col md={{ size: 3, offset: 2 }}>\n                            <Button className=\"btn btn-lg\" color=\"danger\" onClick={()=>this.handleDelete()}>\n                                Delete\n                            </Button>\n                        </Col>\n                        <Col md={{ size: 5, offset: 0 }}>\n                            <Button className=\"btn btn-lg\" color=\"info\" onClick={()=>this.handleUpdate()}>\n                                Update\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        )\n    }\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                <ToastContainer position=\"top-right\"\n                    autoClose={2000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover/>\n                    <div className=\"col-10 offset-2\">\n                    <h3>hospital Edit</h3>\n                    \n                    { this.state.isLoaded ? this.getForm() : this.loadData() }\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HospitalEdit;"]},"metadata":{},"sourceType":"module"}