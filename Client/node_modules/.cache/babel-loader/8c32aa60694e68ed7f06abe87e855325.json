{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nishant/TE_FIRSTSEM/SL-1/project/bloodbook/src/pages/Nurse/NurseRegistration.js\";\nimport React, { Component } from \"react\";\nimport { Row, Label, Col, Button } from \"reactstrap\";\nimport { Control, Form, Errors } from 'react-redux-form';\nimport http from '../common';\nimport Notification, { notify } from \"react-notify-toast\";\nimport validator from 'email-validator';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nconst isNumber = val => !isNaN(Number(val));\n\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nconst hstyle = {\n  'display': 'none'\n};\nconst vstyle = {\n  'display': 'block'\n};\n\nclass NurseRegistration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newNurse: false,\n      email: '',\n      fname: '',\n      lname: '',\n      phone: '',\n      location: '',\n      gender: 'M'\n    };\n  }\n\n  getStyles() {\n    if (this.state.newNurse) {\n      return vstyle;\n    } else {\n      return hstyle;\n    }\n  }\n\n  checkEmail(emailId) {\n    if (validator.validate(emailId)) {\n      http.post('check_nurse_email', {\n        'email': emailId\n      }).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            newNurse: false,\n            email: emailId\n          });\n          notify.show('Email already Exists', 'warning', 1000);\n        } else {\n          this.setState({\n            newNurse: true,\n            email: emailId\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      this.setState({\n        newNurse: false,\n        email: emailId\n      });\n    }\n  }\n\n  handleSubmit() {\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-content\",\n      children: [/*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Nurse Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-9\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            model: \"feedback\",\n            onSubmit: values => this.handleSubmit(values),\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"email\",\n                md: 2,\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 10,\n                children: [/*#__PURE__*/_jsxDEV(Control.text, {\n                  model: \".email\",\n                  id: \"email\",\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  className: \"form-control\",\n                  validators: {\n                    required,\n                    validEmail\n                  },\n                  onChange: e => {\n                    this.checkEmail(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                  className: \"text-danger\",\n                  model: \".email\",\n                  show: \"touched\",\n                  messages: {\n                    required: 'Required',\n                    validEmail: 'Invalid Email Address'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: this.getStyles(),\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"firstname\",\n                  md: 2,\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 10,\n                  children: [/*#__PURE__*/_jsxDEV(Control.text, {\n                    model: \".firstname\",\n                    id: \"firstname\",\n                    name: \"firstname\",\n                    placeholder: \"First Name\",\n                    className: \"form-control\",\n                    validators: {\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                    className: \"text-danger\",\n                    model: \".firstname\",\n                    show: \"touched\",\n                    messages: {\n                      required: 'Required',\n                      minLength: 'Must be greater than 2 characters',\n                      maxLength: 'Must be 15 characters or less'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"lastname\",\n                  md: 2,\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 10,\n                  children: [/*#__PURE__*/_jsxDEV(Control.text, {\n                    model: \".lastname\",\n                    id: \"lastname\",\n                    name: \"lastname\",\n                    placeholder: \"Last Name\",\n                    className: \"form-control\",\n                    validators: {\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                    className: \"text-danger\",\n                    model: \".lastname\",\n                    show: \"touched\",\n                    messages: {\n                      required: 'Required',\n                      minLength: 'Must be greater than 2 characters',\n                      maxLength: 'Must be 15 characters or less'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"telnum\",\n                  md: 2,\n                  children: \"Contact Tel.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 10,\n                  children: [/*#__PURE__*/_jsxDEV(Control.text, {\n                    model: \".telnum\",\n                    id: \"telnum\",\n                    name: \"telnum\",\n                    placeholder: \"Tel. Number\",\n                    className: \"form-control\",\n                    validators: {\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                    className: \"text-danger\",\n                    model: \".telnum\",\n                    show: \"touched\",\n                    messages: {\n                      required: 'Required',\n                      minLength: 'Must be greater than 2 numbers',\n                      maxLength: 'Must be 15 numbers or less',\n                      isNumber: 'Must be a number'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: {\n                  size: 10,\n                  offset: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  color: \"primary\",\n                  children: \"Send Feedback\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NurseRegistration;","map":{"version":3,"sources":["/home/nishant/TE_FIRSTSEM/SL-1/project/bloodbook/src/pages/Nurse/NurseRegistration.js"],"names":["React","Component","Row","Label","Col","Button","Control","Form","Errors","http","Notification","notify","validator","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","hstyle","vstyle","NurseRegistration","constructor","props","state","newNurse","email","fname","lname","phone","location","gender","getStyles","checkEmail","emailId","validate","post","then","response","status","setState","show","catch","error","console","log","handleSubmit","render","values","e","target","value","size","offset"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\";\nimport { Row,Label,Col,Button } from \"reactstrap\";\nimport { Control, Form, Errors } from 'react-redux-form';\nimport http from '../common'\nimport Notification,{ notify } from \"react-notify-toast\";\nimport validator from 'email-validator';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nconst hstyle = {\n    'display' : 'none'\n}\n\nconst vstyle = {\n    'display' : 'block'\n}\n\nclass NurseRegistration extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            newNurse    : false,\n            email       : '',\n            fname       : '',\n            lname       : '',\n            phone       : '',\n            location    : '',\n            gender      : 'M'\n        }\n    }\n    getStyles(){\n        if(this.state.newNurse){\n            return vstyle;\n        }else{\n            return hstyle;\n        }\n    }\n    checkEmail(emailId){\n        if(validator.validate(emailId)){\n            http.post('check_nurse_email',{\n                'email' : emailId\n            }).then((response) => {\n                if(response.status === 200){\n                    this.setState({ newNurse : false, email : emailId })\n                    notify.show('Email already Exists','warning',1000);\n                }else{\n                    this.setState({ newNurse : true, email : emailId });\n                }\n            }).catch((error) => {\n                console.log(error);\n            }); \n        }else{\n            this.setState({ newNurse : false, email : emailId })\n        }\n    }\n    handleSubmit(){\n        console.log(this.state)\n    }\n    render(){\n        return(\n            <div className=\"row row-content\">\n                <Notification/>\n                <div className=\"col-12\">\n                    <h3>Nurse Registration</h3>\n                    <hr/>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                        <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                        onChange={\n                                            (e) => {\n                                                this.checkEmail(e.target.value);\n                                            }\n                                        }\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <div style={this.getStyles()}>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                            placeholder=\"First Name\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".firstname\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                            placeholder=\"Last Name\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".lastname\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                            placeholder=\"Tel. Number\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".telnum\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 numbers',\n                                                maxLength: 'Must be 15 numbers or less',\n                                                isNumber: 'Must be a number'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                \n                            </div>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NurseRegistration;"]},"metadata":{},"sourceType":"module"}