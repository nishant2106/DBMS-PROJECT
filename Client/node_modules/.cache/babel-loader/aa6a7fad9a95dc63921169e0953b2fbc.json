{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nishant/TE_FIRSTSEM/SL-1/project/bloodbook/src/pages/Nurse/NurseList.js\";\nimport React, { Component } from \"react\";\nimport { Table } from \"reactstrap\";\nimport NurseListItem from './NurseListItem';\nimport http from '../common';\nimport axios from \"axios\";\n\nclass NurseList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nurses: '',\n      isAvailable: false\n    };\n  }\n\n  async loadNurseList() {\n    http.get('Nurse', {}).then(response => {\n      console.log(response);\n      this.setState((prevState, props) => {\n        return {\n          nurses: response.data,\n          isAvailable: true\n        };\n      });\n    }).catch(error => {\n      console.log(error);\n    }); // const url=\"http://localhost:3001/Nurse\"\n    // const response = await fetch(url)\n    // const data = await response.json()\n    // console.log(data)\n  }\n\n  prepareNurseList() {\n    let rows = [];\n\n    if (this.state.isAvailable) {\n      console.log(this.state.nurses);\n      let nurseData = this.state.nurses;\n\n      for (let i = 0; i < Object.keys(nurseData).length; i++) {\n        rows.push( /*#__PURE__*/_jsxDEV(NurseListItem, {\n          editCallBack: this.editCallBack,\n          nid: nurseData[i].nid,\n          name: nurseData[i].fname + ' ' + nurseData[i].lname,\n          gender: nurseData[i].gender,\n          location: nurseData[i].location,\n          phone: nurseData[i].phone,\n          email: nurseData[i].email,\n          date: nurseData[i].date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this));\n      }\n\n      return rows;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" No Data to Display \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"highlight\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              \"data-field\": \"NID\",\n              children: \"NurseID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              \"data-field\": \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              \"data-field\": \"gender\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              \"data-field\": \"location\",\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              \"data-field\": \"phone\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              \"data-field\": \"Email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              \"data-field\": \"date\",\n              children: \"Join Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.loadNurseList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NurseList;","map":{"version":3,"sources":["/home/nishant/TE_FIRSTSEM/SL-1/project/bloodbook/src/pages/Nurse/NurseList.js"],"names":["React","Component","Table","NurseListItem","http","axios","NurseList","constructor","props","state","nurses","isAvailable","loadNurseList","get","then","response","console","log","setState","prevState","data","catch","error","prepareNurseList","rows","nurseData","i","Object","keys","length","push","editCallBack","nid","fname","lname","gender","location","phone","email","date","render"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\";\nimport { Table } from \"reactstrap\";\nimport NurseListItem from './NurseListItem'\nimport http from '../common'\nimport axios from \"axios\";\n\nclass NurseList extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            nurses : '',\n            isAvailable : false\n        }\n    }\n    async loadNurseList(){\n        http.get('Nurse',{\n        \n        }).then((response) => {\n            console.log(response);\n             this.setState((prevState, props) => {\n                 return({ nurses : response.data, isAvailable : true });\n             });\n        }).catch((error) => {\n            console.log(error);\n        });\n        // const url=\"http://localhost:3001/Nurse\"\n        // const response = await fetch(url)\n        // const data = await response.json()\n        // console.log(data)\n    }\n    prepareNurseList(){\n        let rows = [];\n        if(this.state.isAvailable){\n            console.log(this.state.nurses);\n            let nurseData = this.state.nurses;\n            for( let i = 0; i< Object.keys(nurseData).length; i++){\n                rows.push(\n                    <NurseListItem\n                        editCallBack={ this.editCallBack }\n                        nid={nurseData[i].nid} \n                        name={nurseData[i].fname+' '+nurseData[i].lname}\n                        gender={ nurseData[i].gender }\n                        location={ nurseData[i].location }\n                        phone={ nurseData[i].phone }\n                        email={ nurseData[i].email }\n                        date={ nurseData[i].date } />\n                )\n            }\n\n            return rows;\n        }else{\n            return( <h2> No Data to Display </h2>);\n        }\n    }\n    render(){\n        return(\n            <div>\n                <Table className=\"highlight\">\n                    <thead>\n                        <tr>\n                            <th data-field=\"NID\">NurseID</th>\n                            <th data-field=\"name\">Name</th>\n                            <th data-field=\"gender\">Gender</th>\n                            <th data-field=\"location\">Location</th>\n                            <th data-field=\"phone\">Phone</th>\n                            <th data-field=\"Email\">Email</th>\n                            <th data-field=\"date\">Join Date</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.loadNurseList()}\n                    {/* { this.state.isAvailable ? this.prepareNurseList() : this.loadNurseList() } */}\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport default NurseList;"]},"metadata":{},"sourceType":"module"}